- name: setup catalogue server
  hosts: catalogue
  become: yes
  tasks:
  - name: disbale default nodejs
    ansible.builtin.command: dnf module disable nodejs:20 -y
     

  - name: enable node js
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create roboshop system user
    ansible.builtin.user:
     name: roboshop
     comment: roboshop system user
     system: true
     shell: /sbin/nologin
     home: /app

  - name: create app directory
    ansible.builtin.file:
     path: /app
     state: directory
  

  - name: Download catalogue application
    ansible.builtin.get_url:
     url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
     dest: /tmp/catalogue.zip


  - name: extract catalogue application
    ansible.builtin.unarchive:
     remote_src: yes
     src:  /tmp/catalogue.zip
     dest: /app
    
  - name: Install dependencies
    community.general.npm:
     path: /app


  - name: copy catalogue service 
    ansible.builtin.copy:
     src: catalogue.service
     dest: /etc/systemd/system/catalogue.service
     

  - name: Copy mongo repo
    ansible.builtin.copy:
     src: mongo.repo
     dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.package:   
      name: mongodb-mongosh
      state: present

  - name: connect to mongodb catalogue
    ansible.builtin.command: mongosh mongodb.daws86s.cyou --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
    register: catalogue_output


  - name: print catalogue ec2_output
    ansible.builtin.debug:
     msg: "{{ catalogue_output }}"
