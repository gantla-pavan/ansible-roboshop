- name: setup user server
  hosts: user
  become: yes
  tasks:
  - name: disbale default nodejs
    ansible.builtin.command: dnf module disable nodejs:20 -y
     

  - name: enable node js
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create roboshop system user
    ansible.builtin.user:
     name: roboshop
     comment: roboshop system user
     system: true
     shell: /sbin/nologin
     home: /app

  - name: remove app directory if exist
    ansible.builtin.file:
     path: /app
     state: absent


  - name: create app directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: delete user file
    ansible.builtin.file:
     path: /tmp/user.zip
     state: absent
  

  - name: Download user application
    ansible.builtin.get_url:
     url: https://roboshop-artifacts.s3.amazonaws.com/user-v3.zip 
     dest: /tmp/user.zip


  - name: extract user application
    ansible.builtin.unarchive:
     remote_src: yes
     src:  /tmp/user.zip
     dest: /app
    
  - name: Install dependencies
    community.general.npm:
     path: /app


  - name: copy user service 
    ansible.builtin.copy:
     src: user.service
     dest: /etc/systemd/system/user.service
     

  - name: Copy mongo repo
    ansible.builtin.copy:
     src: mongo.repo
     dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.package:   
      name: mongodb-mongosh
      state: present

  - name: connect to mongodb user
    ansible.builtin.command: mongosh mongodb.daws86s.cyou --quiet --eval "db.getMongo().getDBNames().indexOf('user')"
    register: user_output


  - name: print user ec2_output
    ansible.builtin.debug:
     msg: "{{ user_output }}"


  - name: load products into mongodb
    ansible.builtin.shell: mongosh --host mongodb.daws86s.cyou </app/db/master-data.js
    when: user_output.stdout | int < 0


  - name: start and enable user
    ansible.builtin.service:
     name: user
     enabled: yes
     state: started  


  - name: daemon reload enable and start
    ansible.builtin.systemd_service:
      name: user
      state: started
      enabled: true
      daemon_relaod: true
